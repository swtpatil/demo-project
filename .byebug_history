c
expect(response).to permit(:category)
response.body
get :index, params: {}
get :index
c
response.body
get :index
c
get :index
n
it "Show all present categories" do
let(:category) {Category.create!(name: "Food")}
c
let(:category) {Category.create!(name: "Food")}
c
get :index, params: {}
c
get :index, params: {}
get :index
get :index, params: {}
c
get :index, params: {}
get :index params: {}
get :index params{}
get :index
get categories_path
c
get :index
get categories_path
get category_path
c
Category.create!(row.to_hash)
c
if Category.count == 1
category = Category.where(id: category_hash["id"])
category_hash = row.to_hash
c
if Category.count == 1
if category.count == 1
category = Category.where(id: category_hash["id"])
category_hash = row.to_hash
c
category = Category.where(id: category_hash["id"])
c
if category.count == 1
category = Category.where(id: category_hash["id"])
category_hash = row.to_hash
c
product = Product.where(id: product_hash["id"])
category_hash = row.to_hash
c
cc
c
if category.count == 1
category = Category.where(id: category_hash["id"])
category_hash = row.to_hash
c
task :import, [:category.csv] => :environment do
c
if category.count == 1
category = Category.where(id: category_hash["id"])
category_hash = row.to_hash
c
category_hash = row.to_hash
c
CSV.foreach(file, headers: true) do |row|
Category.create!(row.to_hash)
CSV.foreach(file, headers: true) do |row|
c
CSV.foreach(file, headers: true) do |row|
c
x
c
 if category.count == 1
c
 if category.count == 1
category = Category.where(id: category_hash["id"])
category_hash = row.to_hash
c
 if category.count == 1 then
c
 if category.count == 1
category_hash = row.to_hash
c
 if category.count == 1
category = Category.where(id: category_hash["id"])
category_hash = row.to_hash
